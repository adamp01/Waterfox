name: Build Classic

on:
    push:
        paths:
          - 'browser/config/version_display.txt'
    pull_request:
    workflow_dispatch:

jobs:
    # build-mac:
    # build-linux:
    build-windows:
        name: ðŸªŸ Build for Windows
        strategy:
            fail-fast: false
        env:
            ENABLE_ARTIFACTS_MODE: "true"
            MOZCONFIG: "./.mozconfig-ga"
            MOZ_NOSPAM: 1
        runs-on: windows-latest
        steps:
          - name: Checkout branch
            uses: actions/checkout@v2
          - name: Define cache
            uses: actions/cache@v2
            with:
              path: |
                $LOCALAPPDATA/ccache
              key: ${{ runner.os }}-${{ hashFiles('**/browser/config/version_display.txt') }}

          - name: Install dependencies
            run: |
              choco install nasm vcredist140 isualstudio2017-workload-nativedesktop visualstudio2017-workload-nativegame visualstudio2017community windows-sdk-10-version-2004-all
              choco install llvm --version=11.1.0
              choco install nodejs --version=10.24.1
              choco install rust-ms --version=1.51.0

          - uses: msys2/setup-msys2@v2
            with:
              update: true
          - uses: actions/setup-python@v2
            with:
              python-version: '2.x'

          - name: Mach build
            shell: msys2 {0}
            run: |
              export PATH=$PATH:/c/hostedtoolcache/windows/Python
              ./mach build

          - name: Mach package
            shell: msys2 {0}
            run: |
              ./mach package

          - name: Upload artifact
            uses: actions/upload-artifact@v2
            with:
              name: Artifact Classic Windows ${{ github.run_id }}
              path: ./objdir-*/dist/installer/sea/*.exe

    # build:
    #     strategy:
    #         fail-fast: false
    #         matrix:
    #             os: [macos-10.15, ubuntu-18.04]

    #     env:
    #         ENABLE_ARTIFACTS_MODE: "true"
    #         MOZCONFIG: "./.mozconfig-ga"
    #         SHELL: "/bin/bash"

    #     runs-on: ${{ matrix.os }}
    #     steps:
    #       - name: Set up Xcode version
    #         uses: maxim-lobanov/setup-xcode@v1
    #         with:
    #           xcode-version: '11.2.1'
    #         if: startsWith(matrix.os, 'macos')

    #       - name: Checkout branch
    #         uses: actions/checkout@v2

    #       - name: Cache for macOS
    #         uses: actions/cache@v2
    #         with:
    #           path: |
    #             ~/Library/Caches/ccache
    #           key: ${{ runner.os }}-${{ hashFiles('**/browser/config/version_display.txt') }}
    #         if: startsWith(matrix.os, 'macos')

    #       - name: Cache for Linux
    #         uses: actions/cache@v2
    #         with:
    #           path: |
    #             ~/.ccache
    #           key: ${{ runner.os }}-${{ hashFiles('**/browser/config/version_display.txt') }}
    #         if: startsWith(matrix.os, 'ubuntu')

    #       - name: Cleanup useless paths
    #         run: |
    #           sudo rm -rf /usr/share/dotnet
    #           sudo rm -rf /opt/ghc
    #           sudo rm -rf /usr/local/share/boost
    #           sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    #         if: startsWith(matrix.os, 'ubuntu')

    #       - name: Brew dependencies
    #         run: |
    #           brew update
    #           brew install autoconf@2.13 ccache make nasm yasm
    #         if: startsWith(matrix.os, 'macos')

    #       - name: Apt-get dependencies
    #         run: |
    #           sudo apt-get update
    #           sudo apt-get install autoconf2.13 ccache libasound2-dev \
    #           libdbus-glib-1-dev libdrm-dev libfreetype6-dev libgconf2-dev \
    #           libglib2.0-dev libgtk2.0-dev libgtk-3-dev libpangocairo-1.0-0 \
    #           libpulse-dev libx11-xcb-dev libxkbcommon-dev nasm-mozilla \
    #           python2.7 python3 yasm
    #         if: startsWith(matrix.os, 'ubuntu')

    #       - name: Get SDK
    #         run: |
    #           wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.12.sdk.tar.xz
    #           tar -xvf MacOSX10.12.sdk.tar.xz
    #         if: startsWith(matrix.os, 'macos')

    #       - name: Mach build
    #         run: |
    #           ./mach build

    #       - name: Mach package
    #         run: |
    #           ./mach package
    #         if: env.ENABLE_ARTIFACTS_MODE == 'true'

    #       - name: Upload macOS artifact
    #         uses: actions/upload-artifact@v2
    #         with:
    #           name: Artifact Classic macOS ${{ github.run_id }}
    #           path: ./objdir-*/dist/*.dmg
    #         if: startsWith(matrix.os, 'macos') && env.ENABLE_ARTIFACTS_MODE == 'true'

    #       - name: Upload Linux artifact
    #         uses: actions/upload-artifact@v2
    #         with:
    #           name: Artifact Classic Linux ${{ github.run_id }}
    #           path: ./objdir-*/dist/*.tar.bz2
    #         if: startsWith(matrix.os, 'ubuntu') && env.ENABLE_ARTIFACTS_MODE == 'true'
